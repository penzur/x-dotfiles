# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 77)
		PURPLE=$(tput setaf 141)
		BLUE=$(tput setaf 33)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		BLUE=$(tput setaf 3)
	fi
  WHITE=$(tput setaf 7)
  BLACK=$(tput setaf 0)
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	BLUE="\033[1;34m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
	BLACK="\033[m"
fi

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export BLUE
export WHITE
export BOLD
export RESET
export BLACK

function git_info() {
	# check if we're in a git repo
	git rev-parse --is-inside-work-tree &>/dev/null || return

	# quickest check for what branch we're on
	branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

	# check if it's dirty (via github.com/sindresorhus/pure)
	dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

	echo -e $branch$dirty" "
}

export PS1="\n\[$BLUE\]\w\[$RESET\]\n\$([[ -n \$(git branch 2> /dev/null) ]] && echo \"\[$PURPLE\] \")\$(git_info)\[$WHITE\]%\[$RESET\] "
export PS2="\[$ORANGE\]→ \[$RESET\]"
